@props(['options' => [], 'label' => null])

@php
    // Set id from name if unset
    $id = empty($attributes->get('id')) ? 'wrinput-'.$attributes->get('name') : $attributes->get('id');

    // Fix up hideKeyValues option
    $options['hideKeyValues'] = is_string($options['hideKeyValues']) ? json_decode($options['hideKeyValues'] ?? []) : false;
@endphp

<div class="{{ $options['containerClass'] ?? 'w-full flex-1 flex flex-col gap-1 md:flex-auto' }}">

@if(!empty($label))
    @themeComponent('forms.label', [
        'label' => $label,
        'attributes' => Arr::toAttributeBag([
            'for' => $id,
            'class' => $options['labelClass'] ?? ''
        ])
    ])
@endif

{{-- Blade code generated by JSON UI --}}
{{-- {!! $bladeCode !!} --}}
@themeComponent('forms.json-ui-fields', [
    'json' => $attributes->get('value'),
    'debug' => $options['debug'] ?? false,
    'hideKeyValues' => $options['hideKeyValues'],
    'attributes' => Arr::toAttributeBag([
        'id' => $id,
        'name' => $attributes->get('name'),
    ]),
])

{{-- Field notes (if options has notes key) --}}
@if(!empty($options['notes']))
    @themeComponent('forms.field-notes', ['notes' => $options['notes']])
@endif

@if($options['showError'] ?? true)
    @error($attributes->get('name'))
        @themeComponent('alert', ['type' => 'error', 'message' => $message, 'class' => 'mt-2'])
    @enderror
@endif

</div>