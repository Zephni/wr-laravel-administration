<?php

namespace App\WRLA;

use Illuminate\Support\Collection;
use WebRegulate\LaravelAdministration\Models\User;
use WebRegulate\LaravelAdministration\Classes\NavigationItems\NavigationItem;
use WebRegulate\LaravelAdministration\Classes\NavigationItems\NavigationItemDivider;
use WebRegulate\LaravelAdministration\Classes\NavigationItems\NavigationItemsAllManageableModels;
use WebRegulate\LaravelAdministration\Classes\WRLAHelper;

class WRLASettings
{
    /**
     * Build navigation for the WRLA application
     *
     * @return array
     */
    public static function buildNavigation(): array
    {
        return [
            // Dashboard
            new NavigationItem('wrla.dashboard', [], 'Dashboard', 'fa fa-tachometer-alt'),

            // Divider - classes can be appened using the appendClass() method or overriden in the constructor or setClass method
            new NavigationItemDivider(),

            // Import all manageable models as nav items - Optionally use example below to add individually
            // NavigationItemsAllManageableModels::import(),

            // Manageable models
            // \App\WRLA\User::getNavigationItem(),

            // Divider
            new NavigationItemDivider(),

            // Manage account
            new NavigationItem('wrla.manage-account', [], 'Manage Account', 'fa fa-user-circle'),

            // Logout
            new NavigationItem('wrla.logout', [], 'Logout', 'fa fa-sign-out-alt'),
        ];
    }

    /**
    * Define user group tags
    *
    * @return ?Collection
    */
    public static function getUserGroup(string $key): ?Collection
    {
        if($key == 'admin')
        {
            return User::whereHas('wrlaUserData', function($query) {
                $query->whereJsonContains('permissions', ['admin' => true]);
            })->get();
        }

        return collect([User::find($key)]);
    }

    /**
     * Build custom routes. It is recommended to prefix all custom route names with 'wrla.'
     *
     * @return void
     */
    public static function buildCustomRoutes(): void
    {
        // WRLAHelper::registerLivewireRoute(
        //     'url-route',
        //     'wrla.dummy-livewire-component',
        //     DummyLivewireComponent::class,
        //     [],
        //     'Page Meta Title',
        // );
    }
}
