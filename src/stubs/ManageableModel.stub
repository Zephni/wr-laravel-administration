<?php

namespace {{ $NAMESPACE }};

use WebRegulate\LaravelAdministration\Classes\ManageableModel;
use WebRegulate\LaravelAdministration\Classes\BrowseColumns\BrowseColumn;
use WebRegulate\LaravelAdministration\Classes\ManageableFields\Text;
use WebRegulate\LaravelAdministration\Classes\ManageableFields\Image;
use WebRegulate\LaravelAdministration\Classes\ManageableFields\TextArea;
use Illuminate\Support\Collection;

class {{ $MODEL }} extends ManageableModel
{
    /**
     * Setup the main properties of the model.
     * 
     * @return void
     */
    public final static function mainSetup(): void
    {
        // Main
        static::setBaseModelClass(\App\Models\{{ $MODEL_WITH_PATH }}::class);
        static::setDisplayName();
        static::setUrlAlias('{{ $URL_ALIAS }}');
        static::setIcon('{{ $ICON }}');

        // Permissions
        // static::setPermission(ManageableModelPermissions::DELETE, false);
    }

    /**
     * Setup global properties of this manageable model.
     * 
     * @return void
     */
    public final static function globalSetup(): void
    {
        // Navigation
        static::setChildNavigationItems(parent::getDefaultChildNavigationItems());
    }

    /**
     * Setup brwose properties of this manageable model.
     *
     * @return void
     */
    public final static function browseSetup(): void
    {
        // Browse filters
        static::setBrowseFilters(static::getDefaultBrowseFilters());

        // Browse actions
        static::setBrowseActions(static::getDefaultBrowseActions());

        // Order by
        static::setOrderBy();
    }

    /**
     * Provide an array of columns to display in the browse view.
     *
     * @return array
     */
    public final function getBrowseColumns(): array
    {
        return [
            'id' => 'Id',
            // 'name' => 'Name',
            // 'something_else' => BrowseColumn::make('Something Else', 'string')
        ];
    }

    /**
     * Provide an array of manageable fields to display in the upsert view.
     *
     * @return array
     */
    public final function getManageableFields(): array
    {
        return [
            // Text::make($this, 'name')
            //     ->required()
            //     ->validation('string|max:255')
            //     ->setAttribute('placeholder', 'John Doe'),
        ];
    }

    /**
     * Provide the model instance actions.
     *
     * @param Collection $instanceActions default instance actions (edit, delete)
     * @return Collection
     */
    public final function getInstanceActions(Collection $instanceActions): Collection
    {
        return $instanceActions;
    }
}
